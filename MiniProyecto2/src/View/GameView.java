/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Game;
import Controller.ValidationGame;
import Model.Figure;
import Model.Player;
import Resources.InvalidPointException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author Steven.Cardona
 */
public class GameView extends javax.swing.JPanel {

    /**
     * Creates new form GameView
     */
    public GameView(JPanel container, int numberOfRounds, ArrayList<Player> players) {
        initComponents();
        this.containerPanel = container;
        this.game = new Game(numberOfRounds, players);
        game.initialAttempt();

        playerName1.setText(players.get(0).getName());
        playerName2.setText(players.get(1).getName());
        playerName1Symbol.setText(players.get(0).getFigure());
        playerName2Symbol.setText(players.get(1).getFigure());
        roundsValue.setText(String.valueOf(numberOfRounds));

        currentPlayer = game.getCurrentAttempt().getCurrentPlayer();
        setPlayerTurn(currentPlayer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBackHome = new javax.swing.JButton();
        col_0_row_0 = new javax.swing.JButton();
        col_1_row_0 = new javax.swing.JButton();
        col_0_row_1 = new javax.swing.JButton();
        col_2_row_0 = new javax.swing.JButton();
        col_2_row_2 = new javax.swing.JButton();
        col_1_row_1 = new javax.swing.JButton();
        col_2_row_1 = new javax.swing.JButton();
        col_1_row_2 = new javax.swing.JButton();
        col_0_row_2 = new javax.swing.JButton();
        playerName1 = new javax.swing.JLabel();
        playerName2 = new javax.swing.JLabel();
        playerValue1 = new javax.swing.JLabel();
        playerValue2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roundsValue = new javax.swing.JLabel();
        playerName1Symbol = new javax.swing.JLabel();
        playerName2Symbol = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(800, 450));
        setMinimumSize(new java.awt.Dimension(800, 450));
        setPreferredSize(new java.awt.Dimension(800, 450));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBackHome.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBackHome.setText("Salir");
        btnBackHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackHomeActionPerformed(evt);
            }
        });
        add(btnBackHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(717, 11, -1, -1));

        col_0_row_0.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_0_row_0.setActionCommand("x_0_y_0");
        col_0_row_0.setName("x_0_y_0"); // NOI18N
        col_0_row_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_0_row_0ActionPerformed(evt);
            }
        });
        add(col_0_row_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 132, 96));
        col_0_row_0.getAccessibleContext().setAccessibleName("x_0_y_0");
        col_0_row_0.getAccessibleContext().setAccessibleDescription("x_0_y_0");

        col_1_row_0.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_1_row_0.setActionCommand("x_0_y_1");
        col_1_row_0.setName("x_0_y_1"); // NOI18N
        col_1_row_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_1_row_0ActionPerformed(evt);
            }
        });
        add(col_1_row_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 132, 96));
        col_1_row_0.getAccessibleContext().setAccessibleName("x_0_y_1");
        col_1_row_0.getAccessibleContext().setAccessibleDescription("x_0_y_1");

        col_0_row_1.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_0_row_1.setActionCommand("x_1_y_0");
        col_0_row_1.setName("x_1_y_0"); // NOI18N
        col_0_row_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_0_row_1ActionPerformed(evt);
            }
        });
        add(col_0_row_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 132, 96));
        col_0_row_1.getAccessibleContext().setAccessibleName("x_1_y_0");
        col_0_row_1.getAccessibleContext().setAccessibleDescription("x_1_y_0");

        col_2_row_0.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_2_row_0.setActionCommand("x_0_y_2");
        col_2_row_0.setName("x_0_y_2"); // NOI18N
        col_2_row_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_2_row_0ActionPerformed(evt);
            }
        });
        add(col_2_row_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, 132, 96));
        col_2_row_0.getAccessibleContext().setAccessibleName("x_0_y_2");
        col_2_row_0.getAccessibleContext().setAccessibleDescription("x_0_y_2");

        col_2_row_2.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_2_row_2.setActionCommand("x_2_y_2");
        col_2_row_2.setName("x_2_y_2"); // NOI18N
        col_2_row_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_2_row_2ActionPerformed(evt);
            }
        });
        add(col_2_row_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, 132, 96));
        col_2_row_2.getAccessibleContext().setAccessibleName("x_2_y_2");
        col_2_row_2.getAccessibleContext().setAccessibleDescription("x_2_y_2");

        col_1_row_1.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_1_row_1.setActionCommand("x_1_y_1");
        col_1_row_1.setName("x_1_y_1"); // NOI18N
        col_1_row_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_1_row_1ActionPerformed(evt);
            }
        });
        add(col_1_row_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 132, 96));
        col_1_row_1.getAccessibleContext().setAccessibleName("x_1_y_1");
        col_1_row_1.getAccessibleContext().setAccessibleDescription("x_1_y_1");

        col_2_row_1.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_2_row_1.setActionCommand("x_1_y_2");
        col_2_row_1.setName("x_1_y_2"); // NOI18N
        col_2_row_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_2_row_1ActionPerformed(evt);
            }
        });
        add(col_2_row_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, 132, 96));
        col_2_row_1.getAccessibleContext().setAccessibleName("x_1_y_2");
        col_2_row_1.getAccessibleContext().setAccessibleDescription("x_1_y_2");

        col_1_row_2.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_1_row_2.setActionCommand("x_2_y_1");
        col_1_row_2.setName("x_2_y_1"); // NOI18N
        col_1_row_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_1_row_2ActionPerformed(evt);
            }
        });
        add(col_1_row_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 132, 96));
        col_1_row_2.getAccessibleContext().setAccessibleName("x_2_y_1");
        col_1_row_2.getAccessibleContext().setAccessibleDescription("x_2_y_1");

        col_0_row_2.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        col_0_row_2.setActionCommand("x_2_y_0");
        col_0_row_2.setName("x_2_y_0"); // NOI18N
        col_0_row_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                col_0_row_2ActionPerformed(evt);
            }
        });
        add(col_0_row_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 280, 132, 96));
        col_0_row_2.getAccessibleContext().setAccessibleName("x_2_y_0");
        col_0_row_2.getAccessibleContext().setAccessibleDescription("x_2_y_0");

        playerName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(playerName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, 20));

        playerName2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(playerName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 20));

        playerValue1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playerValue1.setText("0");
        add(playerValue1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 20, -1));

        playerValue2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        playerValue2.setText("0");
        add(playerValue2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 20, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Rondas");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        roundsValue.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        roundsValue.setText("0");
        add(roundsValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        playerName1Symbol.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(playerName1Symbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));

        playerName2Symbol.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        add(playerName2Symbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackHomeActionPerformed
        // TODO add your handling code here:
        WelcomeView view = new WelcomeView(containerPanel);
        view.setSize(800, 450);
        view.setLocation(0, 0);

        containerPanel.removeAll();
        containerPanel.add(view, BorderLayout.CENTER);
        containerPanel.revalidate();
        containerPanel.repaint();
    }//GEN-LAST:event_btnBackHomeActionPerformed

    private void col_0_row_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_0_row_1ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(1, 0, col_0_row_1);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_col_0_row_1ActionPerformed

    private void col_0_row_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_0_row_0ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(0, 0, col_0_row_0);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_col_0_row_0ActionPerformed

    private void col_1_row_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_1_row_0ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(0, 1, col_1_row_0);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_col_1_row_0ActionPerformed

    private void col_2_row_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_2_row_0ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(0, 2, col_2_row_0);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_col_2_row_0ActionPerformed

    private void col_1_row_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_1_row_1ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(1, 1, col_1_row_1);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_col_1_row_1ActionPerformed

    private void col_2_row_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_2_row_1ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(1, 2, col_2_row_1);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_col_2_row_1ActionPerformed

    private void col_0_row_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_0_row_2ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(2, 0, col_0_row_2);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_col_0_row_2ActionPerformed

    private void col_1_row_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_1_row_2ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(2, 1, col_1_row_2);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_col_1_row_2ActionPerformed

    private void col_2_row_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_col_2_row_2ActionPerformed
        try {
            // TODO add your handling code here:
            validateBoard(2, 2, col_2_row_2);
        } catch (InvalidPointException ex) {
            Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_col_2_row_2ActionPerformed

    private void validateBoard(int x, int y, JButton button) throws InvalidPointException {
        setFigureInButton(button, currentPlayer.getFigure());

        game.getCurrentAttempt().setSymbolInBoard(currentPlayer.getFigure(), x, y);

        Player winnerPlayer = game.executeValidations();

        if (winnerPlayer != null) {
            incrementScore(winnerPlayer);

            if (game.getNumberOfAttempts() == game.getAttempts().size()) {
                ResultView view = new ResultView(containerPanel, game, winnerPlayer.getName(), playerValue1.getText(), playerValue2.getText());
                view.setSize(800, 450);
                view.setLocation(0, 0);

                containerPanel.removeAll();
                containerPanel.add(view, BorderLayout.CENTER);
                containerPanel.revalidate();
                containerPanel.repaint();
            } else {
                resetBoardGUI();
                game.getCurrentAttempt().getBoard().resetBoard();
                game.resetEmptySlots();
            }
        } else {
            boolean resetBoard = game.isResetBoard();
            if (resetBoard) {
                resetBoardGUI();
                game.resetEmptySlots();
                return;
            }
        }

        currentPlayer = game.getCurrentAttempt().nextTurn(currentPlayer);
        game.getCurrentAttempt().setCurrentPlayer(currentPlayer);
        setPlayerTurn(currentPlayer);

        if (currentPlayer.getName().equals("Machine")) {
            Random aleatorio = new Random();
            int posx = -1;
            int posy = -1;
            String item = "x";

            while (item != null) {
                try {
                    posx = aleatorio.nextInt(game.getCurrentAttempt().getBoard().getRowLength(y));
                    posy = aleatorio.nextInt(game.getCurrentAttempt().getBoard().getRowLength(y));

                    String result = game.getCurrentAttempt().getBoard().getFigure(posx, posy);
                    item = result;
                } catch (InvalidPointException ex) {
                    Logger.getLogger(GameView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            clickIAButton("x_" + posx + "_y_" + posy);
        }
    }

    public void setPlayerTurn(Player player) {
        if (player.getName().equals(playerName1.getText())) {
            playerName1.setForeground(Color.CYAN);
            playerName1Symbol.setForeground(Color.CYAN);

            playerName2.setForeground(Color.BLACK);
            playerName2Symbol.setForeground(Color.BLACK);
        } else {
            playerName2.setForeground(Color.CYAN);
            playerName2Symbol.setForeground(Color.CYAN);

            playerName1.setForeground(Color.BLACK);
            playerName1Symbol.setForeground(Color.BLACK);
        }
    }

    private void setFigureInButton(JButton button, String figure) {
        game.removeEmptySlot();
        button.setText(figure);
    }

    private void resetBoardGUI() {
        col_0_row_0.setText("");
        col_0_row_1.setText("");
        col_0_row_2.setText("");
        col_1_row_0.setText("");
        col_1_row_1.setText("");
        col_1_row_2.setText("");
        col_2_row_0.setText("");
        col_2_row_1.setText("");
        col_2_row_2.setText("");
    }

    private void incrementScore(Player player) {
        game.getCurrentAttempt().setPlayerWinner(player);
        if (player.getName().equals(playerName1.getText())) {
            int increment = 0;

            String player1Value = playerValue1.getText();

            increment = Integer.parseInt(playerValue1.getText()) + 1;

            playerValue1.setText(String.valueOf(increment));
        } else {
            int increment = 0;

            String player1Value = playerValue2.getText();
            
            increment = Integer.parseInt(playerValue2.getText()) + 1;
            playerValue2.setText(String.valueOf(increment));
        }
    }

    private void clickIAButton(String name) {
        // Obtener todos los componentes en la vista
        Component[] componentes = this.getComponents();

        for (Component componente : componentes) {
            if (componente instanceof JButton) {
                // Hacer algo con el botón, como agregar un ActionListener
                JButton boton = (JButton) componente;
                if(name.equals(boton.getName()) || name.equals(boton.getActionCommand())){
                    boton.doClick();
                }
            }
        }
    }

    private JPanel containerPanel;
    private Game game;
    private Player currentPlayer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackHome;
    private javax.swing.JButton col_0_row_0;
    private javax.swing.JButton col_0_row_1;
    private javax.swing.JButton col_0_row_2;
    private javax.swing.JButton col_1_row_0;
    private javax.swing.JButton col_1_row_1;
    private javax.swing.JButton col_1_row_2;
    private javax.swing.JButton col_2_row_0;
    private javax.swing.JButton col_2_row_1;
    private javax.swing.JButton col_2_row_2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel playerName1;
    private javax.swing.JLabel playerName1Symbol;
    private javax.swing.JLabel playerName2;
    private javax.swing.JLabel playerName2Symbol;
    private javax.swing.JLabel playerValue1;
    private javax.swing.JLabel playerValue2;
    private javax.swing.JLabel roundsValue;
    // End of variables declaration//GEN-END:variables
}
